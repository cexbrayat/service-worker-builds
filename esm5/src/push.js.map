{"version":3,"file":"push.js","sourceRoot":"","sources":["../../../../../packages/service-worker/src/push.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injectable} from '@angular/core';\nimport {NEVER, Observable, Subject, merge} from 'rxjs';\nimport {map, switchMap, take} from 'rxjs/operators';\n\nimport {ERR_SW_NOT_SUPPORTED, NgswCommChannel} from './low_level';\n\n\n/**\n * Subscribe and listen to push notifications from the Service Worker.\n *\n * @experimental\n */\n@Injectable()\nexport class SwPush {\n  readonly messages: Observable<object>;\n  readonly subscription: Observable<PushSubscription|null>;\n\n  // TODO(issue/24571): remove '!'.\n  private pushManager !: Observable<PushManager>;\n  private subscriptionChanges: Subject<PushSubscription|null> =\n      new Subject<PushSubscription|null>();\n\n  constructor(private sw: NgswCommChannel) {\n    if (!sw.isEnabled) {\n      this.messages = NEVER;\n      this.subscription = NEVER;\n      return;\n    }\n    this.messages = this.sw.eventsOfType('PUSH').pipe(map((message: any) => message.data));\n\n    this.pushManager = this.sw.registration.pipe(\n        map((registration: ServiceWorkerRegistration) => { return registration.pushManager; }));\n\n    const workerDrivenSubscriptions = this.pushManager.pipe(\n        switchMap((pm: PushManager) => pm.getSubscription().then(sub => { return sub; })));\n    this.subscription = merge(workerDrivenSubscriptions, this.subscriptionChanges);\n  }\n\n  /**\n   * Returns true if the Service Worker is enabled (supported by the browser and enabled via\n   * ServiceWorkerModule).\n   */\n  get isEnabled(): boolean { return this.sw.isEnabled; }\n\n  requestSubscription(options: {serverPublicKey: string}): Promise<PushSubscription> {\n    if (!this.sw.isEnabled) {\n      return Promise.reject(new Error(ERR_SW_NOT_SUPPORTED));\n    }\n    const pushOptions: PushSubscriptionOptionsInit = {userVisibleOnly: true};\n    let key = this.decodeBase64(options.serverPublicKey.replace(/_/g, '/').replace(/-/g, '+'));\n    let applicationServerKey = new Uint8Array(new ArrayBuffer(key.length));\n    for (let i = 0; i < key.length; i++) {\n      applicationServerKey[i] = key.charCodeAt(i);\n    }\n    pushOptions.applicationServerKey = applicationServerKey;\n\n    return this.pushManager.pipe(switchMap((pm: PushManager) => pm.subscribe(pushOptions)), take(1))\n        .toPromise()\n        .then(sub => {\n          this.subscriptionChanges.next(sub);\n          return sub;\n        });\n  }\n\n  unsubscribe(): Promise<void> {\n    if (!this.sw.isEnabled) {\n      return Promise.reject(new Error(ERR_SW_NOT_SUPPORTED));\n    }\n\n    const doUnsubscribe = (sub: PushSubscription | null) => {\n      if (sub === null) {\n        throw new Error('Not subscribed to push notifications.');\n      }\n\n      return sub.unsubscribe().then(success => {\n        if (!success) {\n          throw new Error('Unsubscribe failed!');\n        }\n\n        this.subscriptionChanges.next(null);\n      });\n    };\n\n    return this.subscription.pipe(take(1), switchMap(doUnsubscribe)).toPromise();\n  }\n\n  private decodeBase64(input: string): string { return atob(input); }\n}\n"]}